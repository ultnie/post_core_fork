/**
 * generated by Xtext 2.40.0
 */
package su.nsk.iae.post.poST.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import su.nsk.iae.post.poST.ExternalVarDeclaration;
import su.nsk.iae.post.poST.InputOutputVarDeclaration;
import su.nsk.iae.post.poST.InputVarDeclaration;
import su.nsk.iae.post.poST.OutputVarDeclaration;
import su.nsk.iae.post.poST.PoSTPackage;
import su.nsk.iae.post.poST.Program;
import su.nsk.iae.post.poST.TempVarDeclaration;
import su.nsk.iae.post.poST.VarDeclaration;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Program</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link su.nsk.iae.post.poST.impl.ProgramImpl#getName <em>Name</em>}</li>
 *   <li>{@link su.nsk.iae.post.poST.impl.ProgramImpl#getProgInVars <em>Prog In Vars</em>}</li>
 *   <li>{@link su.nsk.iae.post.poST.impl.ProgramImpl#getProgOutVars <em>Prog Out Vars</em>}</li>
 *   <li>{@link su.nsk.iae.post.poST.impl.ProgramImpl#getProgInOutVars <em>Prog In Out Vars</em>}</li>
 *   <li>{@link su.nsk.iae.post.poST.impl.ProgramImpl#getProgVars <em>Prog Vars</em>}</li>
 *   <li>{@link su.nsk.iae.post.poST.impl.ProgramImpl#getProgTempVars <em>Prog Temp Vars</em>}</li>
 *   <li>{@link su.nsk.iae.post.poST.impl.ProgramImpl#getProgExternVars <em>Prog Extern Vars</em>}</li>
 *   <li>{@link su.nsk.iae.post.poST.impl.ProgramImpl#getProcesses <em>Processes</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ProgramImpl extends MinimalEObjectImpl.Container implements Program
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getProgInVars() <em>Prog In Vars</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProgInVars()
   * @generated
   * @ordered
   */
  protected EList<InputVarDeclaration> progInVars;

  /**
   * The cached value of the '{@link #getProgOutVars() <em>Prog Out Vars</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProgOutVars()
   * @generated
   * @ordered
   */
  protected EList<OutputVarDeclaration> progOutVars;

  /**
   * The cached value of the '{@link #getProgInOutVars() <em>Prog In Out Vars</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProgInOutVars()
   * @generated
   * @ordered
   */
  protected EList<InputOutputVarDeclaration> progInOutVars;

  /**
   * The cached value of the '{@link #getProgVars() <em>Prog Vars</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProgVars()
   * @generated
   * @ordered
   */
  protected EList<VarDeclaration> progVars;

  /**
   * The cached value of the '{@link #getProgTempVars() <em>Prog Temp Vars</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProgTempVars()
   * @generated
   * @ordered
   */
  protected EList<TempVarDeclaration> progTempVars;

  /**
   * The cached value of the '{@link #getProgExternVars() <em>Prog Extern Vars</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProgExternVars()
   * @generated
   * @ordered
   */
  protected EList<ExternalVarDeclaration> progExternVars;

  /**
   * The cached value of the '{@link #getProcesses() <em>Processes</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProcesses()
   * @generated
   * @ordered
   */
  protected EList<su.nsk.iae.post.poST.Process> processes;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ProgramImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PoSTPackage.Literals.PROGRAM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PoSTPackage.PROGRAM__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<InputVarDeclaration> getProgInVars()
  {
    if (progInVars == null)
    {
      progInVars = new EObjectContainmentEList<InputVarDeclaration>(InputVarDeclaration.class, this, PoSTPackage.PROGRAM__PROG_IN_VARS);
    }
    return progInVars;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<OutputVarDeclaration> getProgOutVars()
  {
    if (progOutVars == null)
    {
      progOutVars = new EObjectContainmentEList<OutputVarDeclaration>(OutputVarDeclaration.class, this, PoSTPackage.PROGRAM__PROG_OUT_VARS);
    }
    return progOutVars;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<InputOutputVarDeclaration> getProgInOutVars()
  {
    if (progInOutVars == null)
    {
      progInOutVars = new EObjectContainmentEList<InputOutputVarDeclaration>(InputOutputVarDeclaration.class, this, PoSTPackage.PROGRAM__PROG_IN_OUT_VARS);
    }
    return progInOutVars;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<VarDeclaration> getProgVars()
  {
    if (progVars == null)
    {
      progVars = new EObjectContainmentEList<VarDeclaration>(VarDeclaration.class, this, PoSTPackage.PROGRAM__PROG_VARS);
    }
    return progVars;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<TempVarDeclaration> getProgTempVars()
  {
    if (progTempVars == null)
    {
      progTempVars = new EObjectContainmentEList<TempVarDeclaration>(TempVarDeclaration.class, this, PoSTPackage.PROGRAM__PROG_TEMP_VARS);
    }
    return progTempVars;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ExternalVarDeclaration> getProgExternVars()
  {
    if (progExternVars == null)
    {
      progExternVars = new EObjectContainmentEList<ExternalVarDeclaration>(ExternalVarDeclaration.class, this, PoSTPackage.PROGRAM__PROG_EXTERN_VARS);
    }
    return progExternVars;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<su.nsk.iae.post.poST.Process> getProcesses()
  {
    if (processes == null)
    {
      processes = new EObjectContainmentEList<su.nsk.iae.post.poST.Process>(su.nsk.iae.post.poST.Process.class, this, PoSTPackage.PROGRAM__PROCESSES);
    }
    return processes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PoSTPackage.PROGRAM__PROG_IN_VARS:
        return ((InternalEList<?>)getProgInVars()).basicRemove(otherEnd, msgs);
      case PoSTPackage.PROGRAM__PROG_OUT_VARS:
        return ((InternalEList<?>)getProgOutVars()).basicRemove(otherEnd, msgs);
      case PoSTPackage.PROGRAM__PROG_IN_OUT_VARS:
        return ((InternalEList<?>)getProgInOutVars()).basicRemove(otherEnd, msgs);
      case PoSTPackage.PROGRAM__PROG_VARS:
        return ((InternalEList<?>)getProgVars()).basicRemove(otherEnd, msgs);
      case PoSTPackage.PROGRAM__PROG_TEMP_VARS:
        return ((InternalEList<?>)getProgTempVars()).basicRemove(otherEnd, msgs);
      case PoSTPackage.PROGRAM__PROG_EXTERN_VARS:
        return ((InternalEList<?>)getProgExternVars()).basicRemove(otherEnd, msgs);
      case PoSTPackage.PROGRAM__PROCESSES:
        return ((InternalEList<?>)getProcesses()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PoSTPackage.PROGRAM__NAME:
        return getName();
      case PoSTPackage.PROGRAM__PROG_IN_VARS:
        return getProgInVars();
      case PoSTPackage.PROGRAM__PROG_OUT_VARS:
        return getProgOutVars();
      case PoSTPackage.PROGRAM__PROG_IN_OUT_VARS:
        return getProgInOutVars();
      case PoSTPackage.PROGRAM__PROG_VARS:
        return getProgVars();
      case PoSTPackage.PROGRAM__PROG_TEMP_VARS:
        return getProgTempVars();
      case PoSTPackage.PROGRAM__PROG_EXTERN_VARS:
        return getProgExternVars();
      case PoSTPackage.PROGRAM__PROCESSES:
        return getProcesses();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PoSTPackage.PROGRAM__NAME:
        setName((String)newValue);
        return;
      case PoSTPackage.PROGRAM__PROG_IN_VARS:
        getProgInVars().clear();
        getProgInVars().addAll((Collection<? extends InputVarDeclaration>)newValue);
        return;
      case PoSTPackage.PROGRAM__PROG_OUT_VARS:
        getProgOutVars().clear();
        getProgOutVars().addAll((Collection<? extends OutputVarDeclaration>)newValue);
        return;
      case PoSTPackage.PROGRAM__PROG_IN_OUT_VARS:
        getProgInOutVars().clear();
        getProgInOutVars().addAll((Collection<? extends InputOutputVarDeclaration>)newValue);
        return;
      case PoSTPackage.PROGRAM__PROG_VARS:
        getProgVars().clear();
        getProgVars().addAll((Collection<? extends VarDeclaration>)newValue);
        return;
      case PoSTPackage.PROGRAM__PROG_TEMP_VARS:
        getProgTempVars().clear();
        getProgTempVars().addAll((Collection<? extends TempVarDeclaration>)newValue);
        return;
      case PoSTPackage.PROGRAM__PROG_EXTERN_VARS:
        getProgExternVars().clear();
        getProgExternVars().addAll((Collection<? extends ExternalVarDeclaration>)newValue);
        return;
      case PoSTPackage.PROGRAM__PROCESSES:
        getProcesses().clear();
        getProcesses().addAll((Collection<? extends su.nsk.iae.post.poST.Process>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PoSTPackage.PROGRAM__NAME:
        setName(NAME_EDEFAULT);
        return;
      case PoSTPackage.PROGRAM__PROG_IN_VARS:
        getProgInVars().clear();
        return;
      case PoSTPackage.PROGRAM__PROG_OUT_VARS:
        getProgOutVars().clear();
        return;
      case PoSTPackage.PROGRAM__PROG_IN_OUT_VARS:
        getProgInOutVars().clear();
        return;
      case PoSTPackage.PROGRAM__PROG_VARS:
        getProgVars().clear();
        return;
      case PoSTPackage.PROGRAM__PROG_TEMP_VARS:
        getProgTempVars().clear();
        return;
      case PoSTPackage.PROGRAM__PROG_EXTERN_VARS:
        getProgExternVars().clear();
        return;
      case PoSTPackage.PROGRAM__PROCESSES:
        getProcesses().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PoSTPackage.PROGRAM__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case PoSTPackage.PROGRAM__PROG_IN_VARS:
        return progInVars != null && !progInVars.isEmpty();
      case PoSTPackage.PROGRAM__PROG_OUT_VARS:
        return progOutVars != null && !progOutVars.isEmpty();
      case PoSTPackage.PROGRAM__PROG_IN_OUT_VARS:
        return progInOutVars != null && !progInOutVars.isEmpty();
      case PoSTPackage.PROGRAM__PROG_VARS:
        return progVars != null && !progVars.isEmpty();
      case PoSTPackage.PROGRAM__PROG_TEMP_VARS:
        return progTempVars != null && !progTempVars.isEmpty();
      case PoSTPackage.PROGRAM__PROG_EXTERN_VARS:
        return progExternVars != null && !progExternVars.isEmpty();
      case PoSTPackage.PROGRAM__PROCESSES:
        return processes != null && !processes.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //ProgramImpl
