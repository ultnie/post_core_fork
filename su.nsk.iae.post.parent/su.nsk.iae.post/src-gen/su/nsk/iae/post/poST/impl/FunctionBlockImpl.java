/**
 * generated by Xtext 2.40.0
 */
package su.nsk.iae.post.poST.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import su.nsk.iae.post.poST.ExternalVarDeclaration;
import su.nsk.iae.post.poST.FunctionBlock;
import su.nsk.iae.post.poST.InputOutputVarDeclaration;
import su.nsk.iae.post.poST.InputVarDeclaration;
import su.nsk.iae.post.poST.OutputVarDeclaration;
import su.nsk.iae.post.poST.PoSTPackage;
import su.nsk.iae.post.poST.TempVarDeclaration;
import su.nsk.iae.post.poST.VarDeclaration;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Function Block</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link su.nsk.iae.post.poST.impl.FunctionBlockImpl#getName <em>Name</em>}</li>
 *   <li>{@link su.nsk.iae.post.poST.impl.FunctionBlockImpl#getFbInVars <em>Fb In Vars</em>}</li>
 *   <li>{@link su.nsk.iae.post.poST.impl.FunctionBlockImpl#getFbOutVars <em>Fb Out Vars</em>}</li>
 *   <li>{@link su.nsk.iae.post.poST.impl.FunctionBlockImpl#getFbInOutVars <em>Fb In Out Vars</em>}</li>
 *   <li>{@link su.nsk.iae.post.poST.impl.FunctionBlockImpl#getFbVars <em>Fb Vars</em>}</li>
 *   <li>{@link su.nsk.iae.post.poST.impl.FunctionBlockImpl#getFbTempVars <em>Fb Temp Vars</em>}</li>
 *   <li>{@link su.nsk.iae.post.poST.impl.FunctionBlockImpl#getFbExternVars <em>Fb Extern Vars</em>}</li>
 *   <li>{@link su.nsk.iae.post.poST.impl.FunctionBlockImpl#getProcesses <em>Processes</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FunctionBlockImpl extends MinimalEObjectImpl.Container implements FunctionBlock
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getFbInVars() <em>Fb In Vars</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFbInVars()
   * @generated
   * @ordered
   */
  protected EList<InputVarDeclaration> fbInVars;

  /**
   * The cached value of the '{@link #getFbOutVars() <em>Fb Out Vars</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFbOutVars()
   * @generated
   * @ordered
   */
  protected EList<OutputVarDeclaration> fbOutVars;

  /**
   * The cached value of the '{@link #getFbInOutVars() <em>Fb In Out Vars</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFbInOutVars()
   * @generated
   * @ordered
   */
  protected EList<InputOutputVarDeclaration> fbInOutVars;

  /**
   * The cached value of the '{@link #getFbVars() <em>Fb Vars</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFbVars()
   * @generated
   * @ordered
   */
  protected EList<VarDeclaration> fbVars;

  /**
   * The cached value of the '{@link #getFbTempVars() <em>Fb Temp Vars</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFbTempVars()
   * @generated
   * @ordered
   */
  protected EList<TempVarDeclaration> fbTempVars;

  /**
   * The cached value of the '{@link #getFbExternVars() <em>Fb Extern Vars</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFbExternVars()
   * @generated
   * @ordered
   */
  protected EList<ExternalVarDeclaration> fbExternVars;

  /**
   * The cached value of the '{@link #getProcesses() <em>Processes</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProcesses()
   * @generated
   * @ordered
   */
  protected EList<su.nsk.iae.post.poST.Process> processes;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FunctionBlockImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PoSTPackage.Literals.FUNCTION_BLOCK;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PoSTPackage.FUNCTION_BLOCK__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<InputVarDeclaration> getFbInVars()
  {
    if (fbInVars == null)
    {
      fbInVars = new EObjectContainmentEList<InputVarDeclaration>(InputVarDeclaration.class, this, PoSTPackage.FUNCTION_BLOCK__FB_IN_VARS);
    }
    return fbInVars;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<OutputVarDeclaration> getFbOutVars()
  {
    if (fbOutVars == null)
    {
      fbOutVars = new EObjectContainmentEList<OutputVarDeclaration>(OutputVarDeclaration.class, this, PoSTPackage.FUNCTION_BLOCK__FB_OUT_VARS);
    }
    return fbOutVars;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<InputOutputVarDeclaration> getFbInOutVars()
  {
    if (fbInOutVars == null)
    {
      fbInOutVars = new EObjectContainmentEList<InputOutputVarDeclaration>(InputOutputVarDeclaration.class, this, PoSTPackage.FUNCTION_BLOCK__FB_IN_OUT_VARS);
    }
    return fbInOutVars;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<VarDeclaration> getFbVars()
  {
    if (fbVars == null)
    {
      fbVars = new EObjectContainmentEList<VarDeclaration>(VarDeclaration.class, this, PoSTPackage.FUNCTION_BLOCK__FB_VARS);
    }
    return fbVars;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<TempVarDeclaration> getFbTempVars()
  {
    if (fbTempVars == null)
    {
      fbTempVars = new EObjectContainmentEList<TempVarDeclaration>(TempVarDeclaration.class, this, PoSTPackage.FUNCTION_BLOCK__FB_TEMP_VARS);
    }
    return fbTempVars;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ExternalVarDeclaration> getFbExternVars()
  {
    if (fbExternVars == null)
    {
      fbExternVars = new EObjectContainmentEList<ExternalVarDeclaration>(ExternalVarDeclaration.class, this, PoSTPackage.FUNCTION_BLOCK__FB_EXTERN_VARS);
    }
    return fbExternVars;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<su.nsk.iae.post.poST.Process> getProcesses()
  {
    if (processes == null)
    {
      processes = new EObjectContainmentEList<su.nsk.iae.post.poST.Process>(su.nsk.iae.post.poST.Process.class, this, PoSTPackage.FUNCTION_BLOCK__PROCESSES);
    }
    return processes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PoSTPackage.FUNCTION_BLOCK__FB_IN_VARS:
        return ((InternalEList<?>)getFbInVars()).basicRemove(otherEnd, msgs);
      case PoSTPackage.FUNCTION_BLOCK__FB_OUT_VARS:
        return ((InternalEList<?>)getFbOutVars()).basicRemove(otherEnd, msgs);
      case PoSTPackage.FUNCTION_BLOCK__FB_IN_OUT_VARS:
        return ((InternalEList<?>)getFbInOutVars()).basicRemove(otherEnd, msgs);
      case PoSTPackage.FUNCTION_BLOCK__FB_VARS:
        return ((InternalEList<?>)getFbVars()).basicRemove(otherEnd, msgs);
      case PoSTPackage.FUNCTION_BLOCK__FB_TEMP_VARS:
        return ((InternalEList<?>)getFbTempVars()).basicRemove(otherEnd, msgs);
      case PoSTPackage.FUNCTION_BLOCK__FB_EXTERN_VARS:
        return ((InternalEList<?>)getFbExternVars()).basicRemove(otherEnd, msgs);
      case PoSTPackage.FUNCTION_BLOCK__PROCESSES:
        return ((InternalEList<?>)getProcesses()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PoSTPackage.FUNCTION_BLOCK__NAME:
        return getName();
      case PoSTPackage.FUNCTION_BLOCK__FB_IN_VARS:
        return getFbInVars();
      case PoSTPackage.FUNCTION_BLOCK__FB_OUT_VARS:
        return getFbOutVars();
      case PoSTPackage.FUNCTION_BLOCK__FB_IN_OUT_VARS:
        return getFbInOutVars();
      case PoSTPackage.FUNCTION_BLOCK__FB_VARS:
        return getFbVars();
      case PoSTPackage.FUNCTION_BLOCK__FB_TEMP_VARS:
        return getFbTempVars();
      case PoSTPackage.FUNCTION_BLOCK__FB_EXTERN_VARS:
        return getFbExternVars();
      case PoSTPackage.FUNCTION_BLOCK__PROCESSES:
        return getProcesses();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PoSTPackage.FUNCTION_BLOCK__NAME:
        setName((String)newValue);
        return;
      case PoSTPackage.FUNCTION_BLOCK__FB_IN_VARS:
        getFbInVars().clear();
        getFbInVars().addAll((Collection<? extends InputVarDeclaration>)newValue);
        return;
      case PoSTPackage.FUNCTION_BLOCK__FB_OUT_VARS:
        getFbOutVars().clear();
        getFbOutVars().addAll((Collection<? extends OutputVarDeclaration>)newValue);
        return;
      case PoSTPackage.FUNCTION_BLOCK__FB_IN_OUT_VARS:
        getFbInOutVars().clear();
        getFbInOutVars().addAll((Collection<? extends InputOutputVarDeclaration>)newValue);
        return;
      case PoSTPackage.FUNCTION_BLOCK__FB_VARS:
        getFbVars().clear();
        getFbVars().addAll((Collection<? extends VarDeclaration>)newValue);
        return;
      case PoSTPackage.FUNCTION_BLOCK__FB_TEMP_VARS:
        getFbTempVars().clear();
        getFbTempVars().addAll((Collection<? extends TempVarDeclaration>)newValue);
        return;
      case PoSTPackage.FUNCTION_BLOCK__FB_EXTERN_VARS:
        getFbExternVars().clear();
        getFbExternVars().addAll((Collection<? extends ExternalVarDeclaration>)newValue);
        return;
      case PoSTPackage.FUNCTION_BLOCK__PROCESSES:
        getProcesses().clear();
        getProcesses().addAll((Collection<? extends su.nsk.iae.post.poST.Process>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PoSTPackage.FUNCTION_BLOCK__NAME:
        setName(NAME_EDEFAULT);
        return;
      case PoSTPackage.FUNCTION_BLOCK__FB_IN_VARS:
        getFbInVars().clear();
        return;
      case PoSTPackage.FUNCTION_BLOCK__FB_OUT_VARS:
        getFbOutVars().clear();
        return;
      case PoSTPackage.FUNCTION_BLOCK__FB_IN_OUT_VARS:
        getFbInOutVars().clear();
        return;
      case PoSTPackage.FUNCTION_BLOCK__FB_VARS:
        getFbVars().clear();
        return;
      case PoSTPackage.FUNCTION_BLOCK__FB_TEMP_VARS:
        getFbTempVars().clear();
        return;
      case PoSTPackage.FUNCTION_BLOCK__FB_EXTERN_VARS:
        getFbExternVars().clear();
        return;
      case PoSTPackage.FUNCTION_BLOCK__PROCESSES:
        getProcesses().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PoSTPackage.FUNCTION_BLOCK__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case PoSTPackage.FUNCTION_BLOCK__FB_IN_VARS:
        return fbInVars != null && !fbInVars.isEmpty();
      case PoSTPackage.FUNCTION_BLOCK__FB_OUT_VARS:
        return fbOutVars != null && !fbOutVars.isEmpty();
      case PoSTPackage.FUNCTION_BLOCK__FB_IN_OUT_VARS:
        return fbInOutVars != null && !fbInOutVars.isEmpty();
      case PoSTPackage.FUNCTION_BLOCK__FB_VARS:
        return fbVars != null && !fbVars.isEmpty();
      case PoSTPackage.FUNCTION_BLOCK__FB_TEMP_VARS:
        return fbTempVars != null && !fbTempVars.isEmpty();
      case PoSTPackage.FUNCTION_BLOCK__FB_EXTERN_VARS:
        return fbExternVars != null && !fbExternVars.isEmpty();
      case PoSTPackage.FUNCTION_BLOCK__PROCESSES:
        return processes != null && !processes.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //FunctionBlockImpl
